name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: ProPresenter PCO Live
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build with PyInstaller
      run: pyinstaller --onefile ./src/PcoLive.py

    - name: Package Windows Artifact
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist/PcoLive.exe -DestinationPath PcoLive-windows.zip
      working-directory: ${{github.workspace}}

    - name: Package macOS Artifact
      if: matrix.os == 'macos-latest'
      run: |
        zip -r PcoLive-macOS.zip dist/PcoLive
      working-directory: ${{github.workspace}}

    - name: Package Linux Artifact
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf PcoLive-Linux.tar.gz -C dist/ PcoLive
      working-directory: ${{github.workspace}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact-${{ matrix.os }}
        path: |
          PcoLive-windows.zip
          PcoLive-macOS.zip
          PcoLive-Linux.tar.gz

  release:
    environment: ProPresenter PCO Live
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create Release Version
      uses: CupOfTea696/gh-action-auto-release@v1.0.2
      id: create_release
      with:
        title: "Release: $version"
        tag: "v$semver"
        draft: false
        regex: "/^Release: #{semver}$/i"
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: List build artifacts
      run: ls -l artifacts/


    - name: Upload Windows Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/artifact-windows-latest/PcoLive-windows.zip
        asset_name: PcoLive-Windows.zip
        asset_content_type: application/zip

    - name: Upload macOS Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/artifact-macos-latest/PcoLive-macOS.zip
        asset_name: PcoLive-macOS.zip
        asset_content_type: application/zip

    - name: Upload Linux Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/artifact-ubuntu-latest/PcoLive-Linux.tar.gz
        asset_name: PcoLive-Linux.tar.gz
        asset_content_type: application/gzip
