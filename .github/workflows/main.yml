name: Build and Release

on:
  push:
    branches:
      - main  # or any branch of your choice

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Specify your Python version

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build with PyInstaller
      run: pyinstaller --onefile ./src/PcoLive.py  # Replace with your build command

    - name: Create Release Version
      uses: CupOfTea696/gh-action-auto-release@v1.0.2
      with:
        title: "Release: $version"
        tag: "v$semver"
        draft: false
        regex: "(?<version>(?<prefix>v?)(?<semver>(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<build>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?))"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Windows Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-windows-latest
        path: dist-windows

    - name: Download macOS Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-macos-latest
        path: dist-macos

    - name: Download Linux Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-ubuntu-latest
        path: dist-linux

    - name: Upload Windows Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This URL is provided by the create release step
        asset_path: ./dist-windows/PcoLive.exe # Adjust to the actual path and filename
        asset_name: PcoLive.exe # Name as it will appear in the release
        asset_content_type: application/octet-stream

    - name: Package macOS Artifact
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r PcoLive-macOS.zip PcoLive.app
      working-directory: ${{github.workspace}}

    - name: Upload macOS Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This URL is provided by the create release step
        asset_path: ./dist/PcoLive-macOS.zip # Adjust to the actual path and filename
        asset_name: PcoLive-macOS.zip # Name as it will appear in the release
        asset_content_type: application/zip

    - name: Package Linux Artifact
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf PcoLive-Linux.tar.gz -C dist/ PcoLive
      working-directory: ${{github.workspace}}

    - name: Upload Linux Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This URL is provided by the create release step
        asset_path: ./PcoLive-Linux.tar.gz # Adjust to the actual path and filename
        asset_name: PcoLive-Linux.tar.gz # Name as it will appear in the release
        asset_content_type: application/gzip # Use application/zip for .zip files



